{
	"compiler": {
		"version": "0.8.18+commit.87f61d96"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_governance",
						"type": "address"
					},
					{
						"internalType": "contract IUtils",
						"name": "_utils",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "role",
						"type": "bytes32"
					},
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "previousAdminRole",
						"type": "bytes32"
					},
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "newAdminRole",
						"type": "bytes32"
					}
				],
				"name": "RoleAdminChanged",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "role",
						"type": "bytes32"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "account",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "sender",
						"type": "address"
					}
				],
				"name": "RoleGranted",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "role",
						"type": "bytes32"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "account",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "sender",
						"type": "address"
					}
				],
				"name": "RoleRevoked",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "DEFAULT_ADMIN_ROLE",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes",
						"name": "pieceCid",
						"type": "bytes"
					}
				],
				"name": "activateCid",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "bytes",
								"name": "piece_cid",
								"type": "bytes"
							},
							{
								"internalType": "uint64",
								"name": "piece_size",
								"type": "uint64"
							},
							{
								"internalType": "bool",
								"name": "verified_deal",
								"type": "bool"
							},
							{
								"internalType": "string",
								"name": "label",
								"type": "string"
							},
							{
								"internalType": "int64",
								"name": "start_epoch",
								"type": "int64"
							},
							{
								"internalType": "int64",
								"name": "end_epoch",
								"type": "int64"
							},
							{
								"internalType": "uint256",
								"name": "storage_price_per_epoch",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "provider_collateral",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "client_collateral",
								"type": "uint256"
							},
							{
								"internalType": "string",
								"name": "dataCid",
								"type": "string"
							},
							{
								"internalType": "uint64",
								"name": "extra_params_version",
								"type": "uint64"
							},
							{
								"components": [
									{
										"internalType": "string",
										"name": "location_ref",
										"type": "string"
									},
									{
										"internalType": "uint64",
										"name": "car_size",
										"type": "uint64"
									},
									{
										"internalType": "bool",
										"name": "skip_ipni_announce",
										"type": "bool"
									},
									{
										"internalType": "bool",
										"name": "remove_unsealed_copy",
										"type": "bool"
									}
								],
								"internalType": "struct Structs.ExtraParamsV1",
								"name": "extra_params",
								"type": "tuple"
							}
						],
						"internalType": "struct Structs.DealRequest",
						"name": "deal",
						"type": "tuple"
					}
				],
				"name": "addDealRequest",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "_proposalId",
						"type": "bytes32"
					},
					{
						"internalType": "uint256",
						"name": "_tokenId",
						"type": "uint256"
					}
				],
				"name": "addInvestorTokenToProposal",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "dealIds",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"name": "dealRequestIdx",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "idx",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "valid",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "dealRequests",
				"outputs": [
					{
						"internalType": "bytes",
						"name": "piece_cid",
						"type": "bytes"
					},
					{
						"internalType": "uint64",
						"name": "piece_size",
						"type": "uint64"
					},
					{
						"internalType": "bool",
						"name": "verified_deal",
						"type": "bool"
					},
					{
						"internalType": "string",
						"name": "label",
						"type": "string"
					},
					{
						"internalType": "int64",
						"name": "start_epoch",
						"type": "int64"
					},
					{
						"internalType": "int64",
						"name": "end_epoch",
						"type": "int64"
					},
					{
						"internalType": "uint256",
						"name": "storage_price_per_epoch",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "provider_collateral",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "client_collateral",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "dataCid",
						"type": "string"
					},
					{
						"internalType": "uint64",
						"name": "extra_params_version",
						"type": "uint64"
					},
					{
						"components": [
							{
								"internalType": "string",
								"name": "location_ref",
								"type": "string"
							},
							{
								"internalType": "uint64",
								"name": "car_size",
								"type": "uint64"
							},
							{
								"internalType": "bool",
								"name": "skip_ipni_announce",
								"type": "bool"
							},
							{
								"internalType": "bool",
								"name": "remove_unsealed_copy",
								"type": "bool"
							}
						],
						"internalType": "struct Structs.ExtraParamsV1",
						"name": "extra_params",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "dealsLength",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "_proposalId",
						"type": "bytes32"
					}
				],
				"name": "endVotingOnResearchResult",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "filDeposits",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getActiveCids",
				"outputs": [
					{
						"internalType": "string[]",
						"name": "",
						"type": "string[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getActiveCidsLength",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "index",
						"type": "uint256"
					}
				],
				"name": "getDealByIndex",
				"outputs": [
					{
						"components": [
							{
								"internalType": "bytes",
								"name": "piece_cid",
								"type": "bytes"
							},
							{
								"internalType": "uint64",
								"name": "piece_size",
								"type": "uint64"
							},
							{
								"internalType": "bool",
								"name": "verified_deal",
								"type": "bool"
							},
							{
								"internalType": "string",
								"name": "label",
								"type": "string"
							},
							{
								"internalType": "int64",
								"name": "start_epoch",
								"type": "int64"
							},
							{
								"internalType": "int64",
								"name": "end_epoch",
								"type": "int64"
							},
							{
								"internalType": "uint256",
								"name": "storage_price_per_epoch",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "provider_collateral",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "client_collateral",
								"type": "uint256"
							},
							{
								"internalType": "string",
								"name": "dataCid",
								"type": "string"
							},
							{
								"internalType": "uint64",
								"name": "extra_params_version",
								"type": "uint64"
							},
							{
								"components": [
									{
										"internalType": "string",
										"name": "location_ref",
										"type": "string"
									},
									{
										"internalType": "uint64",
										"name": "car_size",
										"type": "uint64"
									},
									{
										"internalType": "bool",
										"name": "skip_ipni_announce",
										"type": "bool"
									},
									{
										"internalType": "bool",
										"name": "remove_unsealed_copy",
										"type": "bool"
									}
								],
								"internalType": "struct Structs.ExtraParamsV1",
								"name": "extra_params",
								"type": "tuple"
							}
						],
						"internalType": "struct Structs.DealRequest",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "proposalId",
						"type": "bytes32"
					}
				],
				"name": "getDealProposal",
				"outputs": [
					{
						"internalType": "bytes",
						"name": "",
						"type": "bytes"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "requestId",
						"type": "bytes32"
					}
				],
				"name": "getDealRequest",
				"outputs": [
					{
						"components": [
							{
								"internalType": "bytes",
								"name": "piece_cid",
								"type": "bytes"
							},
							{
								"internalType": "uint64",
								"name": "piece_size",
								"type": "uint64"
							},
							{
								"internalType": "bool",
								"name": "verified_deal",
								"type": "bool"
							},
							{
								"internalType": "string",
								"name": "label",
								"type": "string"
							},
							{
								"internalType": "int64",
								"name": "start_epoch",
								"type": "int64"
							},
							{
								"internalType": "int64",
								"name": "end_epoch",
								"type": "int64"
							},
							{
								"internalType": "uint256",
								"name": "storage_price_per_epoch",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "provider_collateral",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "client_collateral",
								"type": "uint256"
							},
							{
								"internalType": "string",
								"name": "dataCid",
								"type": "string"
							},
							{
								"internalType": "uint64",
								"name": "extra_params_version",
								"type": "uint64"
							},
							{
								"components": [
									{
										"internalType": "string",
										"name": "location_ref",
										"type": "string"
									},
									{
										"internalType": "uint64",
										"name": "car_size",
										"type": "uint64"
									},
									{
										"internalType": "bool",
										"name": "skip_ipni_announce",
										"type": "bool"
									},
									{
										"internalType": "bool",
										"name": "remove_unsealed_copy",
										"type": "bool"
									}
								],
								"internalType": "struct Structs.ExtraParamsV1",
								"name": "extra_params",
								"type": "tuple"
							}
						],
						"internalType": "struct Structs.DealRequest",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getDealRequestsLength",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "proposalId",
						"type": "bytes32"
					}
				],
				"name": "getExtraParams",
				"outputs": [
					{
						"internalType": "bytes",
						"name": "extra_params",
						"type": "bytes"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "_proposalId",
						"type": "bytes32"
					}
				],
				"name": "getInvestorTokensForProposal",
				"outputs": [
					{
						"internalType": "uint256[]",
						"name": "",
						"type": "uint256[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes",
						"name": "cid",
						"type": "bytes"
					}
				],
				"name": "getProposalIdSet",
				"outputs": [
					{
						"components": [
							{
								"internalType": "bytes32",
								"name": "requestId",
								"type": "bytes32"
							},
							{
								"internalType": "bool",
								"name": "valid",
								"type": "bool"
							}
						],
						"internalType": "struct Structs.RequestId",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes",
						"name": "cid",
						"type": "bytes"
					}
				],
				"name": "getProviderSet",
				"outputs": [
					{
						"components": [
							{
								"internalType": "bytes",
								"name": "provider",
								"type": "bytes"
							},
							{
								"internalType": "bool",
								"name": "valid",
								"type": "bool"
							}
						],
						"internalType": "struct Structs.ProviderSet",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "_id",
						"type": "bytes32"
					}
				],
				"name": "getResearchDeal",
				"outputs": [
					{
						"components": [
							{
								"internalType": "bytes32",
								"name": "dealId",
								"type": "bytes32"
							},
							{
								"internalType": "address",
								"name": "uploader",
								"type": "address"
							},
							{
								"internalType": "string",
								"name": "cid",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "title",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "description",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "price",
								"type": "uint256"
							}
						],
						"internalType": "struct Structs.Research",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "proposalId",
						"type": "bytes32"
					}
				],
				"name": "getResearchProposal",
				"outputs": [
					{
						"components": [
							{
								"internalType": "bytes32",
								"name": "id",
								"type": "bytes32"
							},
							{
								"internalType": "address",
								"name": "creator",
								"type": "address"
							},
							{
								"internalType": "enum ResearchState",
								"name": "state",
								"type": "uint8"
							},
							{
								"internalType": "string",
								"name": "title",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "descriptionUrl",
								"type": "string"
							},
							{
								"internalType": "address",
								"name": "fundingToken",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "fundingAmount",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "fundingDuration",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "researchDuration",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "fundingStartedAt",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "researchStartedAt",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "amountInvested",
								"type": "uint256"
							},
							{
								"internalType": "uint256[]",
								"name": "investorTokens",
								"type": "uint256[]"
							}
						],
						"internalType": "struct Structs.ResearchProposal",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "role",
						"type": "bytes32"
					}
				],
				"name": "getRoleAdmin",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "_proposalId",
						"type": "bytes32"
					}
				],
				"name": "getVoteStartForResarchProposal",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "_proposalId",
						"type": "bytes32"
					}
				],
				"name": "getVotesforResearchProposal",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "role",
						"type": "bytes32"
					},
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "grantRole",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "role",
						"type": "bytes32"
					},
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "hasRole",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "isAdmin",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_token",
						"type": "address"
					}
				],
				"name": "isTokenSupported",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "lockedAmount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "numberOfSuccessfulProposals",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes",
						"name": "",
						"type": "bytes"
					}
				],
				"name": "pieceDeals",
				"outputs": [
					{
						"internalType": "uint64",
						"name": "",
						"type": "uint64"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes",
						"name": "",
						"type": "bytes"
					}
				],
				"name": "pieceProviders",
				"outputs": [
					{
						"internalType": "bytes",
						"name": "provider",
						"type": "bytes"
					},
					{
						"internalType": "bool",
						"name": "valid",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes",
						"name": "",
						"type": "bytes"
					}
				],
				"name": "pieceRequests",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "requestId",
						"type": "bytes32"
					},
					{
						"internalType": "bool",
						"name": "valid",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes",
						"name": "",
						"type": "bytes"
					}
				],
				"name": "pieceStatus",
				"outputs": [
					{
						"internalType": "enum Status",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_token",
						"type": "address"
					}
				],
				"name": "removeToken",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "role",
						"type": "bytes32"
					},
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "renounceRole",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"name": "researchDeals",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "dealId",
						"type": "bytes32"
					},
					{
						"internalType": "address",
						"name": "uploader",
						"type": "address"
					},
					{
						"internalType": "string",
						"name": "cid",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "title",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "description",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "price",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"name": "researchProposals",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "id",
						"type": "bytes32"
					},
					{
						"internalType": "address",
						"name": "creator",
						"type": "address"
					},
					{
						"internalType": "enum ResearchState",
						"name": "state",
						"type": "uint8"
					},
					{
						"internalType": "string",
						"name": "title",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "descriptionUrl",
						"type": "string"
					},
					{
						"internalType": "address",
						"name": "fundingToken",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "fundingAmount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "fundingDuration",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "researchDuration",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "fundingStartedAt",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "researchStartedAt",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amountInvested",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "role",
						"type": "bytes32"
					},
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "revokeRole",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_client",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_dao",
						"type": "address"
					}
				],
				"name": "setAuth",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "id",
						"type": "bytes32"
					},
					{
						"internalType": "uint256",
						"name": "index",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "uploader",
						"type": "address"
					}
				],
				"name": "setDealRequestIdx",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "setFilDeposit",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					}
				],
				"name": "setLockedAmount",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes",
						"name": "cid",
						"type": "bytes"
					},
					{
						"internalType": "uint64",
						"name": "dealId",
						"type": "uint64"
					}
				],
				"name": "setPieceDeal",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes",
						"name": "cid",
						"type": "bytes"
					},
					{
						"components": [
							{
								"internalType": "bytes",
								"name": "provider",
								"type": "bytes"
							},
							{
								"internalType": "bool",
								"name": "valid",
								"type": "bool"
							}
						],
						"internalType": "struct Structs.ProviderSet",
						"name": "pieceProvider",
						"type": "tuple"
					}
				],
				"name": "setPieceProvider",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes",
						"name": "pieceCid",
						"type": "bytes"
					},
					{
						"internalType": "bytes32",
						"name": "requestId",
						"type": "bytes32"
					}
				],
				"name": "setPieceRequest",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes",
						"name": "pieceCid",
						"type": "bytes"
					},
					{
						"internalType": "enum Status",
						"name": "status",
						"type": "uint8"
					}
				],
				"name": "setPieceStatus",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "_id",
						"type": "bytes32"
					},
					{
						"components": [
							{
								"internalType": "bytes32",
								"name": "dealId",
								"type": "bytes32"
							},
							{
								"internalType": "address",
								"name": "uploader",
								"type": "address"
							},
							{
								"internalType": "string",
								"name": "cid",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "title",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "description",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "price",
								"type": "uint256"
							}
						],
						"internalType": "struct Structs.Research",
						"name": "_researchDeal",
						"type": "tuple"
					}
				],
				"name": "setResearchDeal",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "bytes32",
								"name": "id",
								"type": "bytes32"
							},
							{
								"internalType": "address",
								"name": "creator",
								"type": "address"
							},
							{
								"internalType": "enum ResearchState",
								"name": "state",
								"type": "uint8"
							},
							{
								"internalType": "string",
								"name": "title",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "descriptionUrl",
								"type": "string"
							},
							{
								"internalType": "address",
								"name": "fundingToken",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "fundingAmount",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "fundingDuration",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "researchDuration",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "fundingStartedAt",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "researchStartedAt",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "amountInvested",
								"type": "uint256"
							},
							{
								"internalType": "uint256[]",
								"name": "investorTokens",
								"type": "uint256[]"
							}
						],
						"internalType": "struct Structs.ResearchProposal",
						"name": "proposal",
						"type": "tuple"
					}
				],
				"name": "setResearchProposal",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "_proposalId",
						"type": "bytes32"
					}
				],
				"name": "startResearch",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "_proposalId",
						"type": "bytes32"
					}
				],
				"name": "startVotingOnResearchResult",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_token",
						"type": "address"
					}
				],
				"name": "supportToken",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "supportedTokens",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes4",
						"name": "interfaceId",
						"type": "bytes4"
					}
				],
				"name": "supportsInterface",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "totalFunding",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "inRequest",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "paidOut",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "_proposalId",
						"type": "bytes32"
					},
					{
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					}
				],
				"name": "updateResearchProposalInvestedAmount",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "_proposalId",
						"type": "bytes32"
					},
					{
						"internalType": "enum ResearchState",
						"name": "_state",
						"type": "uint8"
					}
				],
				"name": "updateResearchProposalState",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "_proposalId",
						"type": "bytes32"
					},
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					},
					{
						"internalType": "enum ResearchVote",
						"name": "vote",
						"type": "uint8"
					}
				],
				"name": "voteOnResearch",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"events": {
				"RoleAdminChanged(bytes32,bytes32,bytes32)": {
					"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
				},
				"RoleGranted(bytes32,address,address)": {
					"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
				},
				"RoleRevoked(bytes32,address,address)": {
					"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
				}
			},
			"kind": "dev",
			"methods": {
				"getRoleAdmin(bytes32)": {
					"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
				},
				"grantRole(bytes32,address)": {
					"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
				},
				"hasRole(bytes32,address)": {
					"details": "Returns `true` if `account` has been granted `role`."
				},
				"renounceRole(bytes32,address)": {
					"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
				},
				"revokeRole(bytes32,address)": {
					"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
				},
				"supportsInterface(bytes4)": {
					"details": "See {IERC165-supportsInterface}."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"src/core/Storage.sol": "Storage"
		},
		"evmVersion": "paris",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": [
			":@filecoin/=lib/filecoin-solidity/",
			":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
			":@openzeppelin/=lib/openzeppelin-contracts/",
			":@solidity-bignumber/=lib/solidity-bignumber/",
			":@solidity-cborutils/=lib/solidity-cborutils/",
			":ds-test/=lib/forge-std/lib/ds-test/src/",
			":forge-std/=lib/forge-std/src/"
		]
	},
	"sources": {
		"lib/openzeppelin-contracts/contracts/access/AccessControl.sol": {
			"keccak256": "0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f",
			"license": "MIT",
			"urls": [
				"bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb",
				"dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc"
			]
		},
		"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol": {
			"keccak256": "0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57",
			"license": "MIT",
			"urls": [
				"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a",
				"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh"
			]
		},
		"lib/openzeppelin-contracts/contracts/utils/Context.sol": {
			"keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
			"license": "MIT",
			"urls": [
				"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
				"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
			]
		},
		"lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
			"keccak256": "0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0",
			"license": "MIT",
			"urls": [
				"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f",
				"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n"
			]
		},
		"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
			"keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
			"license": "MIT",
			"urls": [
				"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
				"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
			]
		},
		"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
			"keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
			"license": "MIT",
			"urls": [
				"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
				"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
			]
		},
		"lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
			"keccak256": "0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3",
			"license": "MIT",
			"urls": [
				"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c",
				"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS"
			]
		},
		"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
			"keccak256": "0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc",
			"license": "MIT",
			"urls": [
				"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7",
				"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6"
			]
		},
		"src/core/Storage.sol": {
			"keccak256": "0x9924077195b89ae9d34968b73138ceee1dbb7b9b4dbb75e440e08848bc42cc81",
			"license": "MIT",
			"urls": [
				"bzz-raw://bad63d4f54ac2b59e0fb04265df4c2ebe756a3e8611f5dd47b836b7e2aec328b",
				"dweb:/ipfs/QmRmSJfnZ7dUAebYq9QU8mZLZSBXU2GbFngRpgWVQYqjUi"
			]
		},
		"src/interfaces/IUtils.sol": {
			"keccak256": "0x2607994ba1074238e30c109a028a81d81772bb3edd2afb02de905c06d85a3129",
			"license": "MIT",
			"urls": [
				"bzz-raw://d0532ba3b77ba50593f0781a15a72166dad88e5d3951cc39062897b0e20752dc",
				"dweb:/ipfs/QmZSdJYXV3tLoP2LAic1SxJuM4gMoFHofB66RFkKmoMDhU"
			]
		},
		"src/utils/Enums.sol": {
			"keccak256": "0x74104b743dfe8c91aaa32d0886e5dc7999edb4b5ec4845509d2e8e75b44ce467",
			"license": "MIT",
			"urls": [
				"bzz-raw://db77d928b7015435aacc99d5e6120d944e8f60979e7cd7f6b4d7a7e014a57f69",
				"dweb:/ipfs/QmXbDLwGhzYNs4AGVcZrC3snxh1buKgkqJ8XtTAXrSXap3"
			]
		},
		"src/utils/Structs.sol": {
			"keccak256": "0x0bf1e9d6175c32f32169fb9ef7bbfe1e30f50a15b0b2d66abdbdc0e67569f9d4",
			"license": "MIT",
			"urls": [
				"bzz-raw://a221837bf38aba836a06f77a505b40dc3405b601821a09fff402680598d1adb9",
				"dweb:/ipfs/QmYcTfdFRdknwRLtexcLg6bzz6oaTefqUgTCgEzgWYRcmc"
			]
		}
	},
	"version": 1
}