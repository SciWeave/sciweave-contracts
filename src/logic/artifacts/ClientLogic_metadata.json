{
	"compiler": {
		"version": "0.8.18+commit.87f61d96"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "int256",
						"name": "errorCode",
						"type": "int256"
					}
				],
				"name": "ActorError",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "ActorNotFound",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "FailToCallActor",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "InvalidAddress",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "uint64",
						"name": "",
						"type": "uint64"
					}
				],
				"name": "InvalidCodec",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "InvalidResponseLength",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "balance",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "NotEnoughBalance",
				"type": "error"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "id",
						"type": "bytes32"
					},
					{
						"indexed": false,
						"internalType": "uint64",
						"name": "size",
						"type": "uint64"
					},
					{
						"indexed": true,
						"internalType": "bool",
						"name": "verified",
						"type": "bool"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "price",
						"type": "uint256"
					}
				],
				"name": "DealProposalCreate",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint8",
						"name": "version",
						"type": "uint8"
					}
				],
				"name": "Initialized",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "string",
						"name": "received",
						"type": "string"
					}
				],
				"name": "ReceivedDataCap",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "accessToken",
				"outputs": [
					{
						"internalType": "contract AccessToken",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "addBalance",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "base",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "_id",
						"type": "bytes32"
					}
				],
				"name": "buyResearchDeal",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_title",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "_description",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "_price",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "_dataCid",
						"type": "string"
					}
				],
				"name": "createResarchDeal",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "dealIds",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"name": "dealRequestIdx",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "idx",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "valid",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "dealRequests",
				"outputs": [
					{
						"internalType": "bytes",
						"name": "piece_cid",
						"type": "bytes"
					},
					{
						"internalType": "uint64",
						"name": "piece_size",
						"type": "uint64"
					},
					{
						"internalType": "bool",
						"name": "verified_deal",
						"type": "bool"
					},
					{
						"internalType": "string",
						"name": "label",
						"type": "string"
					},
					{
						"internalType": "int64",
						"name": "start_epoch",
						"type": "int64"
					},
					{
						"internalType": "int64",
						"name": "end_epoch",
						"type": "int64"
					},
					{
						"internalType": "uint256",
						"name": "storage_price_per_epoch",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "provider_collateral",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "client_collateral",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "dataCid",
						"type": "string"
					},
					{
						"internalType": "uint64",
						"name": "extra_params_version",
						"type": "uint64"
					},
					{
						"components": [
							{
								"internalType": "string",
								"name": "location_ref",
								"type": "string"
							},
							{
								"internalType": "uint64",
								"name": "car_size",
								"type": "uint64"
							},
							{
								"internalType": "bool",
								"name": "skip_ipni_announce",
								"type": "bool"
							},
							{
								"internalType": "bool",
								"name": "remove_unsealed_copy",
								"type": "bool"
							}
						],
						"internalType": "struct ExtraParamsV1",
						"name": "extra_params",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint64",
						"name": "method",
						"type": "uint64"
					},
					{
						"internalType": "uint64",
						"name": "",
						"type": "uint64"
					},
					{
						"internalType": "bytes",
						"name": "params",
						"type": "bytes"
					}
				],
				"name": "handle_filecoin_method",
				"outputs": [
					{
						"internalType": "uint32",
						"name": "",
						"type": "uint32"
					},
					{
						"internalType": "uint64",
						"name": "",
						"type": "uint64"
					},
					{
						"internalType": "bytes",
						"name": "",
						"type": "bytes"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "contract AccessToken",
						"name": "_accessToken",
						"type": "address"
					},
					{
						"internalType": "contract IUtils",
						"name": "_utils",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_base",
						"type": "address"
					}
				],
				"name": "initialize",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "bytes",
								"name": "piece_cid",
								"type": "bytes"
							},
							{
								"internalType": "uint64",
								"name": "piece_size",
								"type": "uint64"
							},
							{
								"internalType": "bool",
								"name": "verified_deal",
								"type": "bool"
							},
							{
								"internalType": "string",
								"name": "label",
								"type": "string"
							},
							{
								"internalType": "int64",
								"name": "start_epoch",
								"type": "int64"
							},
							{
								"internalType": "int64",
								"name": "end_epoch",
								"type": "int64"
							},
							{
								"internalType": "uint256",
								"name": "storage_price_per_epoch",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "provider_collateral",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "client_collateral",
								"type": "uint256"
							},
							{
								"internalType": "string",
								"name": "dataCid",
								"type": "string"
							},
							{
								"internalType": "uint64",
								"name": "extra_params_version",
								"type": "uint64"
							},
							{
								"components": [
									{
										"internalType": "string",
										"name": "location_ref",
										"type": "string"
									},
									{
										"internalType": "uint64",
										"name": "car_size",
										"type": "uint64"
									},
									{
										"internalType": "bool",
										"name": "skip_ipni_announce",
										"type": "bool"
									},
									{
										"internalType": "bool",
										"name": "remove_unsealed_copy",
										"type": "bool"
									}
								],
								"internalType": "struct ExtraParamsV1",
								"name": "extra_params",
								"type": "tuple"
							}
						],
						"internalType": "struct DealRequest",
						"name": "deal",
						"type": "tuple"
					},
					{
						"internalType": "address",
						"name": "uploader",
						"type": "address"
					}
				],
				"name": "makeDealProposal",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes",
						"name": "",
						"type": "bytes"
					}
				],
				"name": "pieceInfos",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "requestId",
						"type": "bytes32"
					},
					{
						"internalType": "bool",
						"name": "isRequestIdValid",
						"type": "bool"
					},
					{
						"internalType": "bytes",
						"name": "isProviderSet",
						"type": "bytes"
					},
					{
						"internalType": "bool",
						"name": "isProviderSetValid",
						"type": "bool"
					},
					{
						"internalType": "uint64",
						"name": "dealId",
						"type": "uint64"
					},
					{
						"internalType": "enum Status",
						"name": "pieceStatus",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"name": "researchDeals",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "dealId",
						"type": "bytes32"
					},
					{
						"internalType": "address",
						"name": "uploader",
						"type": "address"
					},
					{
						"internalType": "string",
						"name": "cid",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "title",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "description",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "price",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes",
						"name": "pieceCid",
						"type": "bytes"
					}
				],
				"name": "updateActivationStatus",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "utils",
				"outputs": [
					{
						"internalType": "contract IUtils",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "client",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "withdrawBalance",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"events": {
				"Initialized(uint8)": {
					"details": "Triggered when the contract has been initialized or reinitialized."
				}
			},
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"errors": {
				"ActorError(int256)": [
					{
						"notice": "the called actor returned an error as part of its expected behaviour"
					}
				],
				"ActorNotFound()": [
					{
						"notice": "the actor is not found"
					}
				],
				"FailToCallActor()": [
					{
						"notice": "an error happened trying to call the actor"
					}
				],
				"InvalidCodec(uint64)": [
					{
						"notice": "the codec received is not valid"
					}
				],
				"InvalidResponseLength()": [
					{
						"notice": "the response received is not correct. In some case no response is expected and we received one, or a response was indeed expected and we received none."
					}
				],
				"NotEnoughBalance(uint256,uint256)": [
					{
						"notice": "the smart contract has no enough balance to transfer"
					}
				]
			},
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"src/logic/ClientLogic.sol": "ClientLogic"
		},
		"evmVersion": "paris",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 20
		},
		"remappings": [
			":@filecoin/=lib/filecoin-solidity/",
			":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
			":@openzeppelin/=lib/openzeppelin-contracts/",
			":@solidity-bignumber/=lib/solidity-bignumber/",
			":@solidity-cborutils/=lib/solidity-cborutils/",
			":ds-test/=lib/forge-std/lib/ds-test/src/",
			":forge-std/=lib/forge-std/src/"
		]
	},
	"sources": {
		"@ensdomains/buffer/contracts/Buffer.sol": {
			"keccak256": "0xd6dd3b0b327288f8e1b711a609f4040fea602e2ad4bba9febdf2f33b4e56eb0c",
			"license": "BSD-2-Clause",
			"urls": [
				"bzz-raw://78a722152d40d778a97595e5224fac1d138f4e659dcb1a926148909ef4c4bdca",
				"dweb:/ipfs/QmRxScF53x5ywsChLNpMUCdg2TSoCWTfo8G65Mo3sGY55b"
			]
		},
		"lib/filecoin-solidity/contracts/v0.8/MarketAPI.sol": {
			"keccak256": "0xe2adcdda00cc16069016580c9ecfff6062f98315c40e4e584924d5808c4704fc",
			"license": "Apache-2.0",
			"urls": [
				"bzz-raw://c9fbc15f3453849c20f9dd85e11d588bfd122a01396abb32715b8471154f51ca",
				"dweb:/ipfs/Qmc3cJbt5JXyo75rvK2xCbCQA7EN8m9wXywH1C4GttR62T"
			]
		},
		"lib/filecoin-solidity/contracts/v0.8/cbor/AccountCbor.sol": {
			"keccak256": "0xbc15538954ef494595fa3916532574ba00805ce09d8679d6bcebf59b5dc069cc",
			"license": "Apache-2.0",
			"urls": [
				"bzz-raw://bc46b1dbb7760a7d9a100b0d44a95e4b0a3c68e7c22dda2c8ec9b0442080ed76",
				"dweb:/ipfs/QmWjdmiD96UsdYNvsSv1W97JLvWE6NRnkZLBB5GUecWxkE"
			]
		},
		"lib/filecoin-solidity/contracts/v0.8/cbor/BigIntCbor.sol": {
			"keccak256": "0xbe9eb7f33f943e12a2ca6d8a02178c30cef91f8c9db1c1b50f88a77e31784ac4",
			"license": "Apache-2.0",
			"urls": [
				"bzz-raw://d4b8aa06f6f6a241531393d43e4439dcf264542312f03b3b1be00a6448d45d5e",
				"dweb:/ipfs/QmVarAEVBJgLnGqMEZ6XDRokXKR8vWpS3R6fz7QNCMVPT2"
			]
		},
		"lib/filecoin-solidity/contracts/v0.8/cbor/BytesCbor.sol": {
			"keccak256": "0x092be34452eead511a33e8d5c0a0878bf53ac5747ada8788099a81bdf888eccf",
			"license": "Apache-2.0",
			"urls": [
				"bzz-raw://a8adec0719d5ae1d5252169a9987023fae1d07e50f40d1f91c04020d6e0cb783",
				"dweb:/ipfs/QmWthjuXuaby8XYY5ujLdX9m1Npbd8EdNTjsi6fwqEXeZB"
			]
		},
		"lib/filecoin-solidity/contracts/v0.8/cbor/FilecoinCbor.sol": {
			"keccak256": "0x9c73c2969df5325f1f86c401b05b8983e633e8bd21c1c72b2b9039a731174098",
			"license": "Apache-2.0",
			"urls": [
				"bzz-raw://832c4992387994d42d5b8470cc67eddfe7220719970cc6fe0b17cb2ad0a88716",
				"dweb:/ipfs/QmYW4WknHH4Rf6Wah3LKT1afcZuPkSBK4fegjpwdT5sRaL"
			]
		},
		"lib/filecoin-solidity/contracts/v0.8/cbor/MarketCbor.sol": {
			"keccak256": "0x181e7688efec53b7b300ac9423ff0211dab43e1092340f4905f6528fbd30023a",
			"license": "Apache-2.0",
			"urls": [
				"bzz-raw://351efb527d831ed1c719261b4a577c0bbd036db3c434d2fa2ac04a64b127f4d9",
				"dweb:/ipfs/QmTP4ooWsvA7qy2QB4TUMmbKGZ9vvGrup2mmKsYBpNu3vF"
			]
		},
		"lib/filecoin-solidity/contracts/v0.8/types/AccountTypes.sol": {
			"keccak256": "0x87555cec6962a4b6bd761a2390a24d66e01119d5b761048a27d1df0673a71263",
			"license": "Apache-2.0",
			"urls": [
				"bzz-raw://f42937dc061ce4f2995ad2357a8ebcd030e5744b95665cf24313ed86e1767f4b",
				"dweb:/ipfs/QmWbN2gozKsNXGYM4yMivTRaicPzjVALUHn2GDcRN7FiHE"
			]
		},
		"lib/filecoin-solidity/contracts/v0.8/types/CommonTypes.sol": {
			"keccak256": "0x1819b8e82cf53f0fadc446d064a380979888b97a0004f1e70c9fa1a6f4f13ed9",
			"license": "Apache-2.0",
			"urls": [
				"bzz-raw://f7346f62e3317f519791256e9ecd70c44b3ed48404d8a15aa28b3490b11adabb",
				"dweb:/ipfs/QmNQLSdzyHLDN9a76XANJzkGVVdyYwYzZSRRiwv6CqwZRr"
			]
		},
		"lib/filecoin-solidity/contracts/v0.8/types/MarketTypes.sol": {
			"keccak256": "0xcbffb585561b6057c72c1e1cfea6090d918341cc347e785a988ee9c3c70533be",
			"license": "Apache-2.0",
			"urls": [
				"bzz-raw://82b52c00ee25cd810ac316b464924de45cfe1ea5834a8b2ad1deed6a3a76ad34",
				"dweb:/ipfs/QmSofdrg4Xr1QUJ3ZAvuo3nb28fxWe56o4TondA1AaVGy9"
			]
		},
		"lib/filecoin-solidity/contracts/v0.8/utils/Actor.sol": {
			"keccak256": "0xa4b9eb4d84491477a3c11336a431c4f3a0796977efb92779bd062f273824c67a",
			"license": "Apache-2.0",
			"urls": [
				"bzz-raw://c9c42c1ca5c39551cc0c0032e3b3d602fcaed66bc67c21b2b46a770b6c7009aa",
				"dweb:/ipfs/QmWiqHWieDPscnC21LjhgMrjE5UmzrRfEAVfXPNRTuZStw"
			]
		},
		"lib/filecoin-solidity/contracts/v0.8/utils/CborDecode.sol": {
			"keccak256": "0x3babe3c71558c21f0bef9de09088c42b8b148d16d856f84a350b9c43b4da6018",
			"license": "Apache-2.0",
			"urls": [
				"bzz-raw://1d6a4b4341714cbc99db90831f1a6fa05654c62702badec60701cff701355f9a",
				"dweb:/ipfs/QmbQfXXmvhBhybcS1kd6B7UaXWTGg8R89xgzPycxeojWo6"
			]
		},
		"lib/filecoin-solidity/contracts/v0.8/utils/FilAddresses.sol": {
			"keccak256": "0x93f1bd005e5bde5a4ab794c811d8852dbc968cc3c05f8eb1279e42165b1d6d42",
			"license": "Apache-2.0",
			"urls": [
				"bzz-raw://ba53c4a65a0841db22393619350641f2353e05835ebc13942ec66afe082f20ed",
				"dweb:/ipfs/QmevW4wrp1L6pqHbXnfAeTUZQcR7VFKMw618jFzWT7yQLu"
			]
		},
		"lib/filecoin-solidity/contracts/v0.8/utils/Misc.sol": {
			"keccak256": "0x97b02c3ab9cb11169b0b1a143b513017c6bf0f2cba2fc4f81a77345b5dfe96b4",
			"license": "Apache-2.0",
			"urls": [
				"bzz-raw://1b116a3f7af53a2b35316405af74e296550dcfe04798b6c3954e2becda1027c1",
				"dweb:/ipfs/QmPia4SFULn4EXcE8fiMBcKtf8TX7YfbJRZxywu31e6uQw"
			]
		},
		"lib/openzeppelin-contracts/contracts/interfaces/IERC721.sol": {
			"keccak256": "0xaf297d12d8d4a57fe01a70f0ef38908f208e3faedc577056d0b728fa2f3ccf0c",
			"license": "MIT",
			"urls": [
				"bzz-raw://fbfaf37123958822a2720a4ea29651be00edab787540b770f73d3e025d286ff8",
				"dweb:/ipfs/QmbzgWeTm8hJVUqWrNAwFjshqbYVyeGpQA8D1huzxQdmw6"
			]
		},
		"lib/openzeppelin-contracts/contracts/interfaces/IERC721Receiver.sol": {
			"keccak256": "0x7bd5dc796c245d4c52836610455d172cdfcc1f8dcf0d9b1c4cbde212fde02965",
			"license": "MIT",
			"urls": [
				"bzz-raw://a2305d1c655365cb05fa89cfbf2725cb68f3c6adf5d73da0176cc01bedebe961",
				"dweb:/ipfs/QmS3tu5EST14obbRvPRTm4h8Etfjn3vSfsW3CnbNd4ho8W"
			]
		},
		"lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol": {
			"keccak256": "0x3d6069be9b4c01fb81840fb9c2c4dc58dd6a6a4aafaa2c6837de8699574d84c6",
			"license": "MIT",
			"urls": [
				"bzz-raw://720d6bb56ea0c4ef781c0bd65c5bd0541f5a46100163b2587170f97658d2deed",
				"dweb:/ipfs/QmTS2biLVPrv8CeeXCaKmkFxonMiRvc1LxiYBRYDAJHQUS"
			]
		},
		"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
			"keccak256": "0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266",
			"license": "MIT",
			"urls": [
				"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4",
				"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR"
			]
		},
		"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol": {
			"keccak256": "0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da",
			"license": "MIT",
			"urls": [
				"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708",
				"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV"
			]
		},
		"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
			"keccak256": "0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9",
			"license": "MIT",
			"urls": [
				"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146",
				"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf"
			]
		},
		"lib/openzeppelin-contracts/contracts/utils/Address.sol": {
			"keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
			"license": "MIT",
			"urls": [
				"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
				"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
			]
		},
		"lib/openzeppelin-contracts/contracts/utils/Context.sol": {
			"keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
			"license": "MIT",
			"urls": [
				"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
				"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
			]
		},
		"lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
			"keccak256": "0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0",
			"license": "MIT",
			"urls": [
				"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f",
				"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n"
			]
		},
		"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
			"keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
			"license": "MIT",
			"urls": [
				"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
				"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
			]
		},
		"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
			"keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
			"license": "MIT",
			"urls": [
				"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
				"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
			]
		},
		"lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
			"keccak256": "0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3",
			"license": "MIT",
			"urls": [
				"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c",
				"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS"
			]
		},
		"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
			"keccak256": "0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc",
			"license": "MIT",
			"urls": [
				"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7",
				"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6"
			]
		},
		"lib/solidity-cborutils/contracts/CBOR.sol": {
			"keccak256": "0xe03d8889bf66e7a30e8010b022b6c86ad0f8c19764cc6c7f50b6bb4ad860cb9b",
			"license": "MIT",
			"urls": [
				"bzz-raw://bbcfc16dda4f5785938acce3f6733a2a27fbcc7451da05e46e5493907c1bb790",
				"dweb:/ipfs/QmTk1okPxoUykGuXPH3zD1LB57FwPuGbgYmViXXJtuYMUQ"
			]
		},
		"solidity-cborutils/contracts/CBOR.sol": {
			"keccak256": "0xe03d8889bf66e7a30e8010b022b6c86ad0f8c19764cc6c7f50b6bb4ad860cb9b",
			"license": "MIT",
			"urls": [
				"bzz-raw://bbcfc16dda4f5785938acce3f6733a2a27fbcc7451da05e46e5493907c1bb790",
				"dweb:/ipfs/QmTk1okPxoUykGuXPH3zD1LB57FwPuGbgYmViXXJtuYMUQ"
			]
		},
		"src/interfaces/IUtils.sol": {
			"keccak256": "0x69c48b4aa106954091740daff8edc63576d11e5fe535f9fc0f0c9d11f0426ebe",
			"license": "MIT",
			"urls": [
				"bzz-raw://6a6993e0ab45276b7dff6aa380d0ddc1a90828eb50d14f076ad5c4ef4ea0b639",
				"dweb:/ipfs/QmWFLocu5B4bWKS1YSz3NLJRjv3Pwt4BfijhUSAtRALDDe"
			]
		},
		"src/logic/ClientLogic.sol": {
			"keccak256": "0x751046500673add06e20ef3500734871b84328b08e66e78682ba3df15a5fe045",
			"license": "MIT",
			"urls": [
				"bzz-raw://c8b12f09fc1cc734a8473de25b6ab1bfa7e75e87679674a13200d62ab5f5de76",
				"dweb:/ipfs/QmXeStVe4tJnR3MUyjhEKqJiqMZDVjyjf8YXaereb3RBEi"
			]
		},
		"src/token/AccessToken.sol": {
			"keccak256": "0x4fff2edbd487deeae562464c7252f6eb06f061438bf5c41bd716ef309c8bb399",
			"license": "MIT",
			"urls": [
				"bzz-raw://65939c60cbaf17ce8e2657164f8a4e3fc5c42f10696f5e1b30909a76630c7b11",
				"dweb:/ipfs/QmYNdCTfv4jSkDsuJYuo1H5eqeZt7Mf7EqiA5gaQ8FuPmc"
			]
		},
		"src/token/BaseToken.sol": {
			"keccak256": "0xd29714908ebc7b300bff645f253837e8bb85a59fbb47647668893a8c4467b6c8",
			"license": "MIT",
			"urls": [
				"bzz-raw://5ed2601121b35db361f65438beaed59a5df16177a43d2ad2df07eac27bb0d580",
				"dweb:/ipfs/QmWN6VgH7GfSRKVud4UXs4Md22VBW7fvwZ6kKbLye1QdJ5"
			]
		},
		"src/token/ERC721Initializable.sol": {
			"keccak256": "0xf65e889bf9fe8b88ef36129e432bc2bd6c0b981207b12071cf2c92bd43e0c502",
			"license": "MIT",
			"urls": [
				"bzz-raw://4f989d5bf756c8079d4746274356694be0666a0f864c18815a9c12e44c0ee8fe",
				"dweb:/ipfs/QmYNLcbzzqHKzjkRNAXXpniAf7povstHBv8RjN4veo8Xtw"
			]
		},
		"src/token/draft-IERC6093.sol": {
			"keccak256": "0x41fbd14c530c9182ec76784b862754c2f60a73a5192cf834120ac1f6cd06f6f5",
			"license": "MIT",
			"urls": [
				"bzz-raw://e153a2493c8819781c4c6e6447bc55287d5073172d24403d62053efc85a85c2a",
				"dweb:/ipfs/Qma2jRXesDSPH3GhbAwoJ7pNRrxs3ZwXQmDKaJ9EBm1Ah4"
			]
		},
		"src/utils/Base64.sol": {
			"keccak256": "0xf115cfe7dcbbdff35f5018e70575be21c452b6b457673cf32c2f7050d32d30c4",
			"license": "MIT",
			"urls": [
				"bzz-raw://362b874195cfb86225123188bc5ed1fbe85308ca41882edd95c0d81500290a83",
				"dweb:/ipfs/QmVzQu2GsQdm4LiAUfk4wskNSXdy28WxP2ytGbeqyYMTFi"
			]
		},
		"src/utils/Constants.sol": {
			"keccak256": "0xc470b6faf151bc960857a0a4dde2fc7c90e375e55253a24e167d304dea99e2ed",
			"license": "MIT",
			"urls": [
				"bzz-raw://cedbadefec8d60664ca9636c59acdf55041b1a20b7ddf5f4b280edab21da5f62",
				"dweb:/ipfs/QmNwxBbuvjrtdTJ1iEY11ruHdLS6Ukd1G4mc1uQb9v4Zgr"
			]
		},
		"src/utils/Enums.sol": {
			"keccak256": "0x97efc123823fb40bfa60558fdadafe38bbadafdec7f816f772f58c04bfa465b2",
			"license": "MIT",
			"urls": [
				"bzz-raw://ffa85fa66177192e6f6539ba742d3a06833873a742b303e5c0ea39a8f8d19b71",
				"dweb:/ipfs/QmZTr6jQhAtAg3M28U5f98adDnsMb8tM1Lc7hbwQDGMuEe"
			]
		},
		"src/utils/Structs.sol": {
			"keccak256": "0x27dee35a3e3a9070a83744f298bbac53be7928d4481a5ab2fd813f8a8aafb6f7",
			"license": "MIT",
			"urls": [
				"bzz-raw://e8cd22ddbdc1e8c19e4b7d1264b492cfeeb9e974fdbdb6e897f86e6389c364b1",
				"dweb:/ipfs/QmUpHDmvLfvXAntPgTN82yfZCZ7zEYCnmguDZXQ4gziBk2"
			]
		}
	},
	"version": 1
}